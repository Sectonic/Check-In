// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url               = env("DATABASE_URL")
}

model Organizer {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
  meets Meet[]
  // tags Tag[]
  attendees Attendee[]
}

// model Tag {
//   id Int @id @default(autoincrement())
//   name String
//   organizer Organizer @relation(fields: [organizerId], references: [id], onDelete: Cascade)
//   organizerId Int
//   @@index([organizerId])
// }

model Meet {
  id Int @id @default(autoincrement())
  name String

  reoccurance Boolean @default(false)
  inclusive Boolean @default(false)
  tardy Int?
  startDict String?
  endDict String?
  scope String?
  trackAbsent Boolean @default(true)
  multipleSubmissions Boolean @default(false)

  image String?
  imageId String?

  events Event[]
  attendees Attendee[]
  reoccurances Reoccurance[]

  organizer Organizer @relation(fields: [organizerId], references: [id], onDelete: Cascade)
  organizerId Int
}

model Reoccurance {
  id Int @id @default(autoincrement())
  date Int
  meet Meet @relation(fields: [meetId], references: [id], onDelete: Cascade)
  meetId Int
}

model Event {
  id Int @id @default(autoincrement())
  name String
  startTime Int
  endTime Int
  multipleSubmissions Boolean @default(false)
  // tag String?
  meet Meet @relation(fields: [meetId], references: [id], onDelete: Cascade)
  meetId Int
  attendances Attendance[]
}

model Attendee {
  id Int @id @default(autoincrement())
  name String
  specificId String
  organizer Organizer @relation(fields: [organizerId], references: [id], onDelete: Cascade)
  organizerId Int
  meets Meet[]
  // tag String? 
  attendances Attendance[]
}

model Attendance {
  id Int @id @default(autoincrement())
  attendee Attendee? @relation(fields: [attendeeId], references: [id])
  attendeeId Int?
  name String
  specificId String
  attended Boolean @default(false)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int
  submitted Int @default(0)
  hours Float
}